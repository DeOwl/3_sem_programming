{"future_incompat_report":[{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33693,"byte_end":33694,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24523,"byte_end":24547,"line_start":875,"line_end":875,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27328,"byte_end":27351,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":28509,"byte_end":28532,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":47134,"byte_end":48713,"line_start":1451,"line_end":1499,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33184,"byte_end":33200,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1451:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33693,"byte_end":33694,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24523,"byte_end":24547,"line_start":875,"line_end":875,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24622,"byte_end":24641,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27328,"byte_end":27351,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":28509,"byte_end":28532,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":47134,"byte_end":48713,"line_start":1451,"line_end":1499,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33184,"byte_end":33200,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1451:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33693,"byte_end":33694,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24523,"byte_end":24547,"line_start":875,"line_end":875,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24622,"byte_end":24641,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24622,"byte_end":24641,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27328,"byte_end":27351,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":28509,"byte_end":28532,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":47134,"byte_end":48713,"line_start":1451,"line_end":1499,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33184,"byte_end":33200,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1451:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33693,"byte_end":33694,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24523,"byte_end":24547,"line_start":875,"line_end":875,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24622,"byte_end":24641,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24622,"byte_end":24641,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27328,"byte_end":27351,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":28509,"byte_end":28532,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":47134,"byte_end":48713,"line_start":1451,"line_end":1499,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":33184,"byte_end":33200,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1451:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":38355,"byte_end":38356,"line_start":1385,"line_end":1385,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"        brackets!($i, call!($f));","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":54213,"byte_end":54465,"line_start":1687,"line_end":1694,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            elems: brackets!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":62},{"text":"            (ExprArray {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                bracket_token: elems.0,","highlight_start":1,"highlight_end":40},{"text":"                elems: elems.1,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"brackets!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":38142,"byte_end":38163,"line_start":1379,"line_end":1379,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! brackets {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `brackets`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1385:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        brackets!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1687:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1687\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1688\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            elems: brackets!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (ExprArray {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                attrs: Vec::new(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1694\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `brackets`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `brackets` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":54577,"byte_end":54690,"line_start":1701,"line_end":1702,"column_start":5,"column_end":50,"is_primary":false,"text":[{"text":"    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),","highlight_start":5,"highlight_end":68},{"text":"           parens!(Punctuated::parse_terminated));","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1701:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m           parens!(Punctuated::parse_terminated));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":54726,"byte_end":55738,"line_start":1705,"line_end":1735,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(and_method_call -> ExprMethodCall, do_parse!(","highlight_start":5,"highlight_end":57},{"text":"        dot: punct!(.) >>","highlight_start":1,"highlight_end":26},{"text":"        method: syn!(Ident) >>","highlight_start":1,"highlight_end":31},{"text":"        turbofish: option!(tuple!(","highlight_start":1,"highlight_end":35},{"text":"            punct!(::),","highlight_start":1,"highlight_end":24},{"text":"            punct!(<),","highlight_start":1,"highlight_end":23},{"text":"            call!(Punctuated::parse_terminated),","highlight_start":1,"highlight_end":49},{"text":"            punct!(>)","highlight_start":1,"highlight_end":22},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        args: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            ExprMethodCall {","highlight_start":1,"highlight_end":29},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                // this expr will get overwritten after being returned","highlight_start":1,"highlight_end":71},{"text":"                receiver: Box::new(Expr::Verbatim(ExprVerbatim {","highlight_start":1,"highlight_end":65},{"text":"                    tts: TokenStream::empty(),","highlight_start":1,"highlight_end":47},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                method: method,","highlight_start":1,"highlight_end":32},{"text":"                turbofish: turbofish.map(|fish| MethodTurbofish {","highlight_start":1,"highlight_end":66},{"text":"                    colon2_token: fish.0,","highlight_start":1,"highlight_end":42},{"text":"                    lt_token: fish.1,","highlight_start":1,"highlight_end":38},{"text":"                    args: fish.2,","highlight_start":1,"highlight_end":34},{"text":"                    gt_token: fish.3,","highlight_start":1,"highlight_end":38},{"text":"                }),","highlight_start":1,"highlight_end":20},{"text":"                args: args.1,","highlight_start":1,"highlight_end":30},{"text":"                paren_token: args.0,","highlight_start":1,"highlight_end":37},{"text":"                dot_token: dot,","highlight_start":1,"highlight_end":32},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1705:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1705\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(and_method_call -> ExprMethodCall, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dot: punct!(.) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1707\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        method: syn!(Ident) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        turbofish: option!(tuple!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1734\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1735\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":56121,"byte_end":56369,"line_start":1749,"line_end":1756,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            elems: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":60},{"text":"            (ExprTuple {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                elems: elems.1,","highlight_start":1,"highlight_end":32},{"text":"                paren_token: elems.0,","highlight_start":1,"highlight_end":38},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1749:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1749\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1750\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            elems: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1751\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (ExprTuple {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1752\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                attrs: Vec::new(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1755\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27626,"byte_end":27671,"line_start":982,"line_end":982,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":56534,"byte_end":57298,"line_start":1765,"line_end":1786,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            let_: keyword!(let) >>","highlight_start":1,"highlight_end":35},{"text":"            pats: call!(Punctuated::parse_separated_nonempty) >>","highlight_start":1,"highlight_end":65},{"text":"            eq: punct!(=) >>","highlight_start":1,"highlight_end":29},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIfLet {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                pats: pats,","highlight_start":1,"highlight_end":28},{"text":"                let_token: let_,","highlight_start":1,"highlight_end":33},{"text":"                eq_token: eq,","highlight_start":1,"highlight_end":30},{"text":"                expr: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1765:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1765\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1766\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1767\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let_: keyword!(let) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1768\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pats: call!(Punctuated::parse_separated_nonempty) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1785\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1786\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":31835,"byte_end":31836,"line_start":1137,"line_end":1137,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        option!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27626,"byte_end":27671,"line_start":982,"line_end":982,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":56534,"byte_end":57298,"line_start":1765,"line_end":1786,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            let_: keyword!(let) >>","highlight_start":1,"highlight_end":35},{"text":"            pats: call!(Punctuated::parse_separated_nonempty) >>","highlight_start":1,"highlight_end":65},{"text":"            eq: punct!(=) >>","highlight_start":1,"highlight_end":29},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIfLet {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                pats: pats,","highlight_start":1,"highlight_end":28},{"text":"                let_token: let_,","highlight_start":1,"highlight_end":33},{"text":"                eq_token: eq,","highlight_start":1,"highlight_end":30},{"text":"                expr: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"option!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":31440,"byte_end":31459,"line_start":1126,"line_end":1126,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! option {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `option`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1137:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        option!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1765:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1765\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1766\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1767\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let_: keyword!(let) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1768\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pats: call!(Punctuated::parse_separated_nonempty) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1785\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1786\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `option`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `option` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27626,"byte_end":27671,"line_start":982,"line_end":982,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":57474,"byte_end":58015,"line_start":1795,"line_end":1810,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIf {","highlight_start":1,"highlight_end":22},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                cond: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1795:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1796\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            cond: expr_no_struct >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1798\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            then_block: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1809\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1810\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":31835,"byte_end":31836,"line_start":1137,"line_end":1137,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        option!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27626,"byte_end":27671,"line_start":982,"line_end":982,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":57474,"byte_end":58015,"line_start":1795,"line_end":1810,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIf {","highlight_start":1,"highlight_end":22},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                cond: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"option!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":31440,"byte_end":31459,"line_start":1126,"line_end":1126,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! option {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `option`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1137:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        option!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1795:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1796\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            cond: expr_no_struct >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1798\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            then_block: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1809\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1810\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `option`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `option` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":25694,"byte_end":25718,"line_start":911,"line_end":911,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        $subrule!($i, $($args)*)","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24961,"byte_end":24980,"line_start":885,"line_end":885,"column_start":46,"column_end":65,"is_primary":false,"text":[{"text":"            ::std::result::Result::Err(_) => alt!($i, $($rest)*),","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24961,"byte_end":24980,"line_start":885,"line_end":885,"column_start":46,"column_end":65,"is_primary":false,"text":[{"text":"            ::std::result::Result::Err(_) => alt!($i, $($rest)*),","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":58155,"byte_end":58785,"line_start":1818,"line_end":1837,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(else_block -> (Token![else], Box<Expr>), do_parse!(","highlight_start":5,"highlight_end":63},{"text":"        else_: keyword!(else) >>","highlight_start":1,"highlight_end":33},{"text":"        expr: alt!(","highlight_start":1,"highlight_end":20},{"text":"            syn!(ExprIf) => { Expr::If }","highlight_start":1,"highlight_end":41},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            syn!(ExprIfLet) => { Expr::IfLet }","highlight_start":1,"highlight_end":47},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            do_parse!(","highlight_start":1,"highlight_end":23},{"text":"                else_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":60},{"text":"                (Expr::Block(ExprBlock {","highlight_start":1,"highlight_end":41},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    block: Block {","highlight_start":1,"highlight_end":35},{"text":"                        brace_token: else_block.0,","highlight_start":1,"highlight_end":51},{"text":"                        stmts: else_block.1,","highlight_start":1,"highlight_end":45},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                }))","highlight_start":1,"highlight_end":20},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        ) >>","highlight_start":1,"highlight_end":13},{"text":"        (else_, Box::new(expr))","highlight_start":1,"highlight_end":32},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":24332,"byte_end":24348,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:1818:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(else_block -> (Token![else], Box<Expr>), do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1819\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        else_: keyword!(else) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        expr: alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1821\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            syn!(ExprIf) => { Expr::If }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1836\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (else_, Box::new(expr))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs","byte_start":72764,"byte_end":72964,"line_start":2309,"line_end":2315,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            stmts: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":51},{"text":"            (Block {","highlight_start":1,"highlight_end":21},{"text":"                brace_token: stmts.0,","highlight_start":1,"highlight_end":38},{"text":"                stmts: stmts.1,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\expr.rs:2309:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            stmts: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (Block {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                brace_token: stmts.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                stmts: stmts.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":5108,"byte_end":5142,"line_start":179,"line_end":179,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs","byte_start":28098,"byte_end":28294,"line_start":882,"line_end":888,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(UseGroup \"use group\" do_parse!(","highlight_start":5,"highlight_end":48},{"text":"        list: braces!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        (UseGroup {","highlight_start":1,"highlight_end":20},{"text":"            brace_token: list.0,","highlight_start":1,"highlight_end":33},{"text":"            items: list.1,","highlight_start":1,"highlight_end":27},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":4991,"byte_end":5014,"line_start":176,"line_end":176,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs:882:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m882\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(UseGroup \"use group\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m883\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        list: braces!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m884\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (UseGroup {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m885\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            brace_token: list.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m886\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            items: list.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m887\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m888\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":5108,"byte_end":5142,"line_start":179,"line_end":179,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs","byte_start":29656,"byte_end":31122,"line_start":938,"line_end":981,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(ItemFn \"fn item\" do_parse!(","highlight_start":5,"highlight_end":44},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        vis: syn!(Visibility) >>","highlight_start":1,"highlight_end":33},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        inner_attrs_stmts: braces!(tuple!(","highlight_start":1,"highlight_end":43},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within)","highlight_start":1,"highlight_end":39},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (ItemFn {","highlight_start":1,"highlight_end":18},{"text":"            attrs: {","highlight_start":1,"highlight_end":21},{"text":"                let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":45},{"text":"                attrs.extend((inner_attrs_stmts.1).0);","highlight_start":1,"highlight_end":55},{"text":"                attrs","highlight_start":1,"highlight_end":22},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            vis: vis,","highlight_start":1,"highlight_end":22},{"text":"            constness: constness,","highlight_start":1,"highlight_end":34},{"text":"            unsafety: unsafety,","highlight_start":1,"highlight_end":32},{"text":"            abi: abi,","highlight_start":1,"highlight_end":22},{"text":"            decl: Box::new(FnDecl {","highlight_start":1,"highlight_end":36},{"text":"                fn_token: fn_,","highlight_start":1,"highlight_end":31},{"text":"                paren_token: inputs.0,","highlight_start":1,"highlight_end":39},{"text":"                inputs: inputs.1,","highlight_start":1,"highlight_end":34},{"text":"                output: ret,","highlight_start":1,"highlight_end":29},{"text":"                variadic: None,","highlight_start":1,"highlight_end":32},{"text":"                generics: Generics {","highlight_start":1,"highlight_end":37},{"text":"                    where_clause: where_clause,","highlight_start":1,"highlight_end":48},{"text":"                    .. generics","highlight_start":1,"highlight_end":32},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            }),","highlight_start":1,"highlight_end":16},{"text":"            ident: ident,","highlight_start":1,"highlight_end":26},{"text":"            block: Box::new(Block {","highlight_start":1,"highlight_end":36},{"text":"                brace_token: inner_attrs_stmts.0,","highlight_start":1,"highlight_end":50},{"text":"                stmts: (inner_attrs_stmts.1).1,","highlight_start":1,"highlight_end":48},{"text":"            }),","highlight_start":1,"highlight_end":16},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":4991,"byte_end":5014,"line_start":176,"line_end":176,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs:938:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m938\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(ItemFn \"fn item\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m939\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m940\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        vis: syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m941\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        constness: option!(keyword!(const)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m980\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m981\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":5108,"byte_end":5142,"line_start":179,"line_end":179,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs","byte_start":39872,"byte_end":41842,"line_start":1276,"line_end":1329,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(TraitItemMethod \"method trait item\" do_parse!(","highlight_start":5,"highlight_end":63},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        body: option!(braces!(","highlight_start":1,"highlight_end":31},{"text":"            tuple!(many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":51},{"text":"                   call!(Block::parse_within))","highlight_start":1,"highlight_end":47},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        semi: cond!(body.is_none(), punct!(;)) >>","highlight_start":1,"highlight_end":50},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let (inner_attrs, stmts) = match body {","highlight_start":1,"highlight_end":52},{"text":"                Some((b, (inner_attrs, stmts))) => (inner_attrs, Some((stmts, b))),","highlight_start":1,"highlight_end":84},{"text":"                None => (Vec::new(), None),","highlight_start":1,"highlight_end":44},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            TraitItemMethod {","highlight_start":1,"highlight_end":30},{"text":"                attrs: {","highlight_start":1,"highlight_end":25},{"text":"                    let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":49},{"text":"                    attrs.extend(inner_attrs);","highlight_start":1,"highlight_end":47},{"text":"                    attrs","highlight_start":1,"highlight_end":26},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                sig: MethodSig {","highlight_start":1,"highlight_end":33},{"text":"                    constness: constness,","highlight_start":1,"highlight_end":42},{"text":"                    unsafety: unsafety,","highlight_start":1,"highlight_end":40},{"text":"                    abi: abi,","highlight_start":1,"highlight_end":30},{"text":"                    ident: ident,","highlight_start":1,"highlight_end":34},{"text":"                    decl: FnDecl {","highlight_start":1,"highlight_end":35},{"text":"                        inputs: inputs.1,","highlight_start":1,"highlight_end":42},{"text":"                        output: ret,","highlight_start":1,"highlight_end":37},{"text":"                        fn_token: fn_,","highlight_start":1,"highlight_end":39},{"text":"                        paren_token: inputs.0,","highlight_start":1,"highlight_end":47},{"text":"                        variadic: None,","highlight_start":1,"highlight_end":40},{"text":"                        generics: Generics {","highlight_start":1,"highlight_end":45},{"text":"                            where_clause: where_clause,","highlight_start":1,"highlight_end":56},{"text":"                            .. generics","highlight_start":1,"highlight_end":40},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                default: stmts.map(|stmts| {","highlight_start":1,"highlight_end":45},{"text":"                    Block {","highlight_start":1,"highlight_end":28},{"text":"                        stmts: stmts.0,","highlight_start":1,"highlight_end":40},{"text":"                        brace_token: stmts.1,","highlight_start":1,"highlight_end":46},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }),","highlight_start":1,"highlight_end":20},{"text":"                semi_token: semi,","highlight_start":1,"highlight_end":34},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":4991,"byte_end":5014,"line_start":176,"line_end":176,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs:1276:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(TraitItemMethod \"method trait item\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        constness: option!(keyword!(const)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafety: option!(keyword!(unsafe)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":5108,"byte_end":5142,"line_start":179,"line_end":179,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs","byte_start":45369,"byte_end":47037,"line_start":1444,"line_end":1491,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(ImplItemMethod \"method in impl block\" do_parse!(","highlight_start":5,"highlight_end":65},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        vis: syn!(Visibility) >>","highlight_start":1,"highlight_end":33},{"text":"        defaultness: option!(keyword!(default)) >>","highlight_start":1,"highlight_end":51},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        inner_attrs_stmts: braces!(tuple!(","highlight_start":1,"highlight_end":43},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within)","highlight_start":1,"highlight_end":39},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (ImplItemMethod {","highlight_start":1,"highlight_end":26},{"text":"            attrs: {","highlight_start":1,"highlight_end":21},{"text":"                let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":45},{"text":"                attrs.extend((inner_attrs_stmts.1).0);","highlight_start":1,"highlight_end":55},{"text":"                attrs","highlight_start":1,"highlight_end":22},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            vis: vis,","highlight_start":1,"highlight_end":22},{"text":"            defaultness: defaultness,","highlight_start":1,"highlight_end":38},{"text":"            sig: MethodSig {","highlight_start":1,"highlight_end":29},{"text":"                constness: constness,","highlight_start":1,"highlight_end":38},{"text":"                unsafety: unsafety,","highlight_start":1,"highlight_end":36},{"text":"                abi: abi,","highlight_start":1,"highlight_end":26},{"text":"                ident: ident,","highlight_start":1,"highlight_end":30},{"text":"                decl: FnDecl {","highlight_start":1,"highlight_end":31},{"text":"                    fn_token: fn_,","highlight_start":1,"highlight_end":35},{"text":"                    paren_token: inputs.0,","highlight_start":1,"highlight_end":43},{"text":"                    inputs: inputs.1,","highlight_start":1,"highlight_end":38},{"text":"                    output: ret,","highlight_start":1,"highlight_end":33},{"text":"                    generics: Generics {","highlight_start":1,"highlight_end":41},{"text":"                        where_clause: where_clause,","highlight_start":1,"highlight_end":52},{"text":"                        .. generics","highlight_start":1,"highlight_end":36},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    variadic: None,","highlight_start":1,"highlight_end":36},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            block: Block {","highlight_start":1,"highlight_end":27},{"text":"                brace_token: inner_attrs_stmts.0,","highlight_start":1,"highlight_end":50},{"text":"                stmts: (inner_attrs_stmts.1).1,","highlight_start":1,"highlight_end":48},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\macros.rs","byte_start":4991,"byte_end":5014,"line_start":176,"line_end":176,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\item.rs:1444:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(ImplItemMethod \"method in impl block\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        vis: syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        defaultness: option!(keyword!(default)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39306,"byte_end":39307,"line_start":1421,"line_end":1421,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27997,"byte_end":28020,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\derive.rs","byte_start":4723,"byte_end":4955,"line_start":155,"line_end":159,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(","highlight_start":5,"highlight_end":104},{"text":"        wh: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":42},{"text":"        data: braces!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        (wh, data.0, data.1)","highlight_start":1,"highlight_end":29},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":39099,"byte_end":39118,"line_start":1415,"line_end":1415,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1421:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\derive.rs:155:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m155\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m156\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        wh: option!(syn!(WhereClause)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m157\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        data: braces!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m158\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (wh, data.0, data.1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m159\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\ty.rs","byte_start":13403,"byte_end":13613,"line_start":438,"line_end":444,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            (TypeTuple {","highlight_start":1,"highlight_end":25},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                elems: data.1,","highlight_start":1,"highlight_end":31},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\ty.rs:438:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m438\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m439\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m440\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (TypeTuple {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m441\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                paren_token: data.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m442\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                elems: data.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m443\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m444\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37379,"byte_end":37380,"line_start":1349,"line_end":1349,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27776,"byte_end":27799,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\path.rs","byte_start":8371,"byte_end":8689,"line_start":296,"line_end":304,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            output: call!(ReturnType::without_plus) >>","highlight_start":1,"highlight_end":55},{"text":"            (ParenthesizedGenericArguments {","highlight_start":1,"highlight_end":45},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                inputs: data.1,","highlight_start":1,"highlight_end":32},{"text":"                output: output,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":27020,"byte_end":27041,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"C:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs","byte_start":37172,"byte_end":37191,"line_start":1343,"line_end":1343,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\parsers.rs:1349:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\DeOwl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-0.13.11\\src\\path.rs:296:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m296\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m297\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m298\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            output: call!(ReturnType::without_plus) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m299\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (ParenthesizedGenericArguments {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m303\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m304\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
